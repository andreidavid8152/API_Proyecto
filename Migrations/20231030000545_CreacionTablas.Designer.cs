// <auto-generated />
using System;
using API_Proyecto.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_Proyecto.Migrations
{
    [DbContext(typeof(ReservacionesDbContext))]
    [Migration("20231030000545_CreacionTablas")]
    partial class CreacionTablas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_Proyecto.Models.Comentario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Calificacion")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocalID")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("LocalID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("API_Proyecto.Models.Horario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<TimeSpan>("HoraFin")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time");

                    b.Property<int>("LocalID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("LocalID");

                    b.ToTable("Horarios");
                });

            modelBuilder.Entity("API_Proyecto.Models.ImagenLocal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("LocalID")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("LocalID");

                    b.ToTable("ImagenesLocal");
                });

            modelBuilder.Entity("API_Proyecto.Models.Local", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropietarioID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PropietarioID");

                    b.ToTable("Locales");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Capacidad = 50,
                            Descripcion = "Una descripción para mi local",
                            Direccion = "Calle Falsa 123",
                            Nombre = "Mi Local",
                            PropietarioID = 1
                        });
                });

            modelBuilder.Entity("API_Proyecto.Models.Reserva", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("HorarioID")
                        .HasColumnType("int");

                    b.Property<int>("LocalID")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("LocalID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("API_Proyecto.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "andrei@gmail.com",
                            Nombre = "Andrei",
                            Password = "2003",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("API_Proyecto.Models.Comentario", b =>
                {
                    b.HasOne("API_Proyecto.Models.Local", "Local")
                        .WithMany("Comentarios")
                        .HasForeignKey("LocalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_Proyecto.Models.Usuario", "Usuario")
                        .WithMany("Comentarios")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Local");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("API_Proyecto.Models.Horario", b =>
                {
                    b.HasOne("API_Proyecto.Models.Local", "Local")
                        .WithMany("Horarios")
                        .HasForeignKey("LocalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Local");
                });

            modelBuilder.Entity("API_Proyecto.Models.ImagenLocal", b =>
                {
                    b.HasOne("API_Proyecto.Models.Local", "Local")
                        .WithMany("Imagenes")
                        .HasForeignKey("LocalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Local");
                });

            modelBuilder.Entity("API_Proyecto.Models.Local", b =>
                {
                    b.HasOne("API_Proyecto.Models.Usuario", "Propietario")
                        .WithMany("Locales")
                        .HasForeignKey("PropietarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Propietario");
                });

            modelBuilder.Entity("API_Proyecto.Models.Reserva", b =>
                {
                    b.HasOne("API_Proyecto.Models.Local", "Local")
                        .WithMany("Reservas")
                        .HasForeignKey("LocalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_Proyecto.Models.Usuario", "Usuario")
                        .WithMany("Reservas")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Local");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("API_Proyecto.Models.Local", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Horarios");

                    b.Navigation("Imagenes");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("API_Proyecto.Models.Usuario", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Locales");

                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
